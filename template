
Generate Minimum Viable Architecture Page

Instructions
Getting Started

Use this document template to build the minimum architecture



1. Purpose
2. Business Context
3. Application
4. Data 
6. Environments & Deployment
7. Resiliency
8. Security Context
9. Observability
10. DevOps, Test and Build Architecture 
11. Tech Debt, MSIs & Exceptions
12. References
Project	<<Project Name>>	
Account



Asset ID	<<Asset ID>>	CI/CD Integration	
Status	
DRAFT  APPROVED     CONDITIONAL APPROVAL   REJECTED  

Data Classification	
Release Name*	<<Release Name>>	SOX Relevancy / High Risk	
Release Date*	<<Release Date>>	NPI	
Business Owner	


Recovery Group / Priority	
Tech Owner	<<Tech Owner>>	InfoSec Architect	
Architecture Owner	<<Arch Owner>>	



 
1. Purpose
Explain the purpose and intent of this asset which is to be designed/built . 



2. Business Context
Engage your Business Architect to complete the following: 

2.1. Business Impact: 
Enterprise Capability Model Alignment (See ECM): 

Expected Outcomes & Business Value: <<This should be a link to a business case or short description>>

Business Value KPI's (Indicate how to measure provided business value): <<>>

2.2. Enterprise Process Repository nformation:
Impacted Processes:

Impacted Organizations, Personas and/or Journeys:

Impacted Systems and Data:



3. Application
Provide Target State Context

List software and servers (COTS products, etc.)

Estimated traffic (i.e. bandwidth) expected / increase in hardware usage



3.1 System Information
Legacy Asset (Name / Asset ID)


Cloud Asset ID (if applicable)




Confirm Updated to Reflect Documented Design: 	
Expected Life of Application:	<< Temporary or Long Term>>

3.2 Supporting Technologies & Related Patterns
#	
Shared Services / Technologies 
cloud systems are supported by several Shared services/third party technologies. These technologies range from Network, Infrastructure, Custom Solutions, Cloud Native Services etc. 
In addition, the Security Services technologies cover the areas of identify, protect, detect, remediate and recover functionalities. 
(See Technical Capabilities Master List) 



#	Approved Patterns/Reference Architectures: (Include links to patterns and services used and note any deviations from standard patterns)




#	Outstanding Dependencies



3.3 System Boundaries / Context Diagram
In the space that follows, provide an explicit definition of the systemâ€™s boundary within the network diagram. See  System Boundary Diagram & Table Example.

 Click for instruction and additional context...
3.4 System Boundaries
Includes all components that can affect confidentiality, integrity and availability while retrieving, transforming and persisting data and/or its metadata. See  System Boundary Diagram & Table Example.

#	
Category

Component

Notes











3.5 Ports & Protocols
The table below lists the ports, protocols and services enabled in this information system. Please indicate the components of the information system that make use of the ports, protocols and services along with their purpose (e.g., system logging, and load balancing etc.). Reference approved pattern:   Model for AWS 2.0 Re-Design

#	
Port

Protocol

Encryption

Services

Purpose

Approved Pattern #

Source

Destination


<Enter Port>

<Enter Protocols>


<Enter Services>

<Enter Purpose>


<Enter Used By>




4. Data 


Instruction:

Provide a brief description of the business data needs that will be addressed by this business solution.

OR

If that information was provided in another section of the architecture, refer to that section.

4.1 Data Flow/Interaction Diagram
Use this section where additional details are needed to describe how data moves other than what is provided in System Context and System Boundaries (see sections 3.3 and 3.4.). If the required information is already described in another section of the architecture, refer to that section.

Detailed dataflows are required for data-centric solutions, including data warehouses, data marts, operational data stores and decision support assets hosted on the data lake

 Expand for instructions...


4.2 Dataset Registration
Cloud datasets must be fully approved/accepted per Enterprise Data Governance requirements prior to any data exchanges registration and prior to the production deployment. 



Instruction: Provide a list of known datasets in scope for the solution.







4.3 Data Exchange (eICR Process)
Interfaces must be fully approved/accepted per Enterprise Data Governance requirements prior to the production deployment.

NOTE: Not all interfaces may be fully identified and registered at time of ARB Approval. 

Instruction:  Provide a list of known interfaces in scope for the solution. Follow standard data exchange process via the eICR Process. Registration of a new Interface and Consumer is required to register a Dataflow against that Interface. Approved cloud datasets must be listed in the producer dataset document and the consumer Source to Target mapping document.  










4.4 Attribute Rationalization & Data Model
Data models must be registered and data attributes must be rationalized per Enterprise Data Governance requirements prior to production deployment.

NOTE: Data models and attributes are not expected to be available for new solutions at time of ARB approval. 

Instruction: 

Provide registered ERS Data Model Name

Confirm that all attributes been rationalized in ELDM.



5. Interface

5.1 Interfaces
Where not described in the System Boundary in section 3, highlight internal and external application interface dependencies and boundaries. Include:  Authnz information and  Interface details (i.e., via stream, via api gateway). 


5.2 API Definitions
If the architecture includes APIs, include information about the APIs being used.

Describe what connectors and services are leveraged by the solution.

Create one subsection for each API (where an API is a group of operations defined by endpoint paths and HTTP methods).

See also  API Standards and Guidelines,  API Management Platform Strategy

NOTE: Not all of the API design details are expected to be known at time of ARB approval.  Additional design details may be added post ARB approval.



5.2.X <Enter API Proxy Name> API
 Click here to expand...
6. Environments & Deployment
Provide a general description of the technical system environment. Include information about all system environments that are used, e.g., Production, Acceptance, Development environment etc.  Some details may be iterated on and become available as the architecture is developed.   I n each environment, provide a list of Cloud Resource Names including where applicable. 

7. Resiliency
Please be sure to include information for both the TRM resiliency pattern  and the technology-specific resiliency information.  

Cloud Resiliency Pattern Options: AWS Active-Active, AWS Active-Passive, AWS Active-Standby, AWS Single region (only for RG 7 )

On Prem Resiliency Pattern Used: active/active, active/passive, active/standby, single region) 

Link to resiliency patterns and show any deviations from pattern.  Add details for this pattern's resiliency aspect (See  examples  #1 ,   #2 , and  #3 ).

Include relevant architecture diagrams depicting failover and other resiliency related details.

Additional guidance and clarity can be found here: Resiliency Guidance


Business Defined

Tech Defined

RTO (e.g. 24hr)

RPO (e.g. 15 min)

RTD

RPD





Business Process

Related Recovery Group




Dependencies

List of Hard Dependencies - Consider if this asset has to failover to secondary region, what other assets need to failover.


Known Upstream Dependencies - Consider assets that feed the solution or are inputs to the architecture.


Known Downstream Dependencies - Consider assets that depend on this architecture. 



8. Security Context
Note: This section should be provided by security architect

Reference all standard security patterns used and show any deviations from patterns

List Network ACL and security 

List Producer and Consumer Roles and cross account trust

List security components for authentication/authorization and encryption (at rest and in transit) at each layer (FMSSO/PING, TLS, Twistlock, s3 encryption)

List security components used for security log delivery and monitoring (e.g. CloudWatch Logs, Splunk)

List security components for secrets and credential management (e.g. AWS Secrets Manager Set-Up pattern)

Include relevant architecture diagrams.

8.1 Identity & Access Management
Describe the roles and types of permissions that will be needed for the application.

#	
Role

Internal or External

Used by

Account Type
(Privileged, Non-Privileged, N/A)

Scope

Authorized Privileges

Functions Performed

Estimated Count

NUID Registration

Type

0	
Example:
DB Administrator

Internal

Interactive

Privileged

Application

DB Administration

Create new users, schemas etc.

~20

N/A 

Federated User



8.2 Credential Management
Describe the user base (internal or external users, or both), authentication credentials used by all system components, including Fannie Mae enterprise identity store or non-standard identity store. 

 Click here for details to help populate the below table...





0	
Ex. Database on-prem (Oracle, Netezza)

Username/Password

PAM/CyberArk (on-prem)

IAG/Active Directory

Fannie Mae Access Management Standards implemented through IAG









8.3 Access Provisioning
Describe credential and access provisioning and de-provisioning mechanisms.



8.4 Authentication and Authorization
Describe all enforcement points for authentication and authorization. 



8.5 Application Security
Identify the application risk level, programming languages used, web based user interfaces, code review and penetration testing requirements and status. 



8.6 Infrastructure Security
Identify versions of all technical architecture components. Ensure all vulnerabilities are patched and monitored. 



8.7 Data Security
Identify data classification, NPI data, highly restricted data.  Define protection mechanism for data at rest and data in transit. 



8.8 Security Monitoring
Describe the security logging and monitoring requirements and mechanisms. Describe critical logs, location, and critical events that need to be monitored and how they are being monitored. 



8.9 Operations Security
Identify the support teams of the systems and the application tier classification information. Describe the privileges required for operation support, incident response process and any data backup/retention mechanism used

8.10 Application-Specific NIST Controls
Please engage your Security Architect to complete your NIST Controls Excel Template, allowing 10 business days for completion, then provide the link to the completed NIST Controls Questionnaire. 

IMPORTANT: At the time of ARB review, sufficient detail should have been provided to allow the Security Architect to confirm all P0 controls have been met either through inheritance or design efforts.  All P1 controls are expected to be met or addressed with an exception/Tech debt prior to deployment to production. 

 Click here to expand step by step instructions...
8.11 Threat Model Assessment
Ensure a Threat Model of the application has been created using the steps outlined in the "How to Threat Model" section of the AppSec Threat Modeling Home.  If you have any questions, please contact the Threat Model Service Desk. Then work with the assigned ISA / Security Advisor to remediate needed actions. 

Link to Locked Threat Model: 	
        1. Total Tasks with Priority 10 =	


        2. Total Tasks with Priority 9 =	
        3. Total Tasks with Priority 8 =	
        4. Total Tasks with Priority 7 =	
9. Observability
Link the relevant pattern and/or add details for security log delivery and monitoring, application logging and monitoring, and relevant governance and audit monitoring.  Reference NFRs and related metrics/health checks (can be from pattern) as well as l ist security components used for operational and security log delivery and monitoring (e.g. CloudWatch logs, Splunk). 

PLEASE NOTE: As part of the new NIST control requirements, the requirement to use CLAM has expanded beyond Crown Jewel applications and now encompasses all applications. Additionally, both Application Monitoring and Threat Detect Response (TDR) logging is also required.  For a complete set of logging requirements, reference the  NIST Control Framework Analysis Process .

 Click here to expand standard logging patterns and general logging expectations...


10. DevOps, Test and Build Architecture 
Provide links to DevOps patterns and note any deviations from the pattern.  The patterns should show:

Delivery pipeline diagram

Tools used (bitbucket, gitlab, ucd, jenkins, ecr, dtr, etc)

Delivery pattern requirements (blue/green, canary, etc) 

11. Tech Debt, MSIs & Exceptions
 Click here to expand...

12. References
Link to  NFR Document
